/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author reyes.jenneth
 */
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.GregorianCalendar;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class ReceptionView extends javax.swing.JFrame {

    /**
     * Creates new form ReceptionView
     */
    public ReceptionView() {
        initComponents();
        date(); day();
        showpatient();
    }

    public ArrayList<patient> patientList(){
        ArrayList<patient> patientsList = new ArrayList<>();
        try{
            Class.forName("org.apache.derby.jdbc.EmbeddedDriver");
            Connection con = DriverManager.getConnection("jdbc:derby://localhost:1527/QMS","konsulta","resulta");
            String query = "SELECT * FROM patients";
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(query);
            patient Patient;
            while(rs.next()){
                Patient = new patient(rs.getInt("patient_ID"),rs.getString("firstname"),rs.getString("midname"),rs.getString("lastname"),rs.getString("address"),rs.getString("gender"),rs.getInt("age"));
            }
        }catch (ClassNotFoundException | SQLException e){
            JOptionPane.showMessageDialog(null, e);
        }
        return patientsList;
    }
    
    public void showpatient(){
        ArrayList<patient> list = patientList();
        DefaultTableModel model = (DefaultTableModel) jTablePedia.getModel();
        Object[] row = new Object[7];
        for(int i=0; i<list.size(); i++){
            row[0]=list.get(i).getpatient_id();
            row[1]=list.get(i).getfirstname();
            row[2]=list.get(i).getmidname();
            row[3]=list.get(i).getlastname();
            row[4]=list.get(i).getaddress();
            row[5]=list.get(i).getgender();
            row[6]=list.get(i).getage();
            model.addRow(row);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ReceptionPanel = new javax.swing.JPanel();
        KRLogo = new javax.swing.JLabel();
        QTabbedPane = new javax.swing.JTabbedPane();
        jPanelPedia = new javax.swing.JPanel();
        jScrollPedia = new javax.swing.JScrollPane();
        jTablePedia = new javax.swing.JTable();
        jPanelObgyne = new javax.swing.JPanel();
        jScrollObgyne = new javax.swing.JScrollPane();
        jTableObgyne = new javax.swing.JTable();
        jPanelOptal = new javax.swing.JPanel();
        jScrollOptal = new javax.swing.JScrollPane();
        jTableOptal = new javax.swing.JTable();
        jPanelEnt = new javax.swing.JPanel();
        jScrollEnt = new javax.swing.JScrollPane();
        jTableEnt = new javax.swing.JTable();
        jPanelIntmed = new javax.swing.JPanel();
        jScrollIntMed = new javax.swing.JScrollPane();
        jTableIntMed = new javax.swing.JTable();
        jPanelSonoOB = new javax.swing.JPanel();
        jScrollSonoOB = new javax.swing.JScrollPane();
        jTableSonoOB = new javax.swing.JTable();
        jPanelDerma = new javax.swing.JPanel();
        jScrollDerma = new javax.swing.JScrollPane();
        jTableDerma = new javax.swing.JTable();
        jPanelUro = new javax.swing.JPanel();
        jScrollUro = new javax.swing.JScrollPane();
        jTableUro = new javax.swing.JTable();
        jPanelSurgery = new javax.swing.JPanel();
        jScrollSurgery = new javax.swing.JScrollPane();
        jTableSurgery = new javax.swing.JTable();
        jPanelRadSono = new javax.swing.JPanel();
        jScrollRadSono = new javax.swing.JScrollPane();
        jTableRadSono = new javax.swing.JTable();
        jPanelOthers = new javax.swing.JPanel();
        jScrollOthers = new javax.swing.JScrollPane();
        jTableOthers = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabelDate = new javax.swing.JLabel();
        jLabelWeekDate = new javax.swing.JLabel();
        SidePanel = new javax.swing.JPanel();
        AddQButton = new javax.swing.JButton();
        PatientsButton = new javax.swing.JButton();
        HistoryButton = new javax.swing.JButton();
        ChangeUser = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        ReceptionPanel.setBackground(new java.awt.Color(197, 239, 247));

        KRLogo.setFont(new java.awt.Font("Sitka Small", 0, 36)); // NOI18N
        KRLogo.setIcon(new javax.swing.ImageIcon("C:\\Users\\reyes.jenneth\\Documents\\Gia\\5TH YEAR\\KRLogo.png")); // NOI18N
        KRLogo.setIconTextGap(0);

        QTabbedPane.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        QTabbedPane.setFont(new java.awt.Font("Poppins", 0, 28)); // NOI18N

        jTablePedia.setAutoCreateRowSorter(true);
        jTablePedia.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        jTablePedia.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null}
            },
            new String [] {
                "Status", "Patient ID", "First Name", "Last Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTablePedia.setRowHeight(25);
        jScrollPedia.setViewportView(jTablePedia);

        javax.swing.GroupLayout jPanelPediaLayout = new javax.swing.GroupLayout(jPanelPedia);
        jPanelPedia.setLayout(jPanelPediaLayout);
        jPanelPediaLayout.setHorizontalGroup(
            jPanelPediaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPedia, javax.swing.GroupLayout.DEFAULT_SIZE, 829, Short.MAX_VALUE)
        );
        jPanelPediaLayout.setVerticalGroup(
            jPanelPediaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPedia, javax.swing.GroupLayout.DEFAULT_SIZE, 403, Short.MAX_VALUE)
        );

        QTabbedPane.addTab("PEDIATRICIAN", jPanelPedia);

        jTableObgyne.setAutoCreateRowSorter(true);
        jTableObgyne.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        jTableObgyne.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Status", "Patient ID", "First Name", "Last Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableObgyne.setRowHeight(25);
        jScrollObgyne.setViewportView(jTableObgyne);

        javax.swing.GroupLayout jPanelObgyneLayout = new javax.swing.GroupLayout(jPanelObgyne);
        jPanelObgyne.setLayout(jPanelObgyneLayout);
        jPanelObgyneLayout.setHorizontalGroup(
            jPanelObgyneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollObgyne, javax.swing.GroupLayout.DEFAULT_SIZE, 829, Short.MAX_VALUE)
        );
        jPanelObgyneLayout.setVerticalGroup(
            jPanelObgyneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollObgyne, javax.swing.GroupLayout.DEFAULT_SIZE, 403, Short.MAX_VALUE)
        );

        QTabbedPane.addTab("OB-GYNE", jPanelObgyne);

        jTableOptal.setAutoCreateRowSorter(true);
        jTableOptal.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        jTableOptal.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Status", "Patient ID", "First Name", "Last Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableOptal.setRowHeight(25);
        jScrollOptal.setViewportView(jTableOptal);

        javax.swing.GroupLayout jPanelOptalLayout = new javax.swing.GroupLayout(jPanelOptal);
        jPanelOptal.setLayout(jPanelOptalLayout);
        jPanelOptalLayout.setHorizontalGroup(
            jPanelOptalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollOptal, javax.swing.GroupLayout.DEFAULT_SIZE, 829, Short.MAX_VALUE)
        );
        jPanelOptalLayout.setVerticalGroup(
            jPanelOptalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollOptal, javax.swing.GroupLayout.DEFAULT_SIZE, 403, Short.MAX_VALUE)
        );

        QTabbedPane.addTab("OPTHALMOLOGIST", jPanelOptal);

        jTableEnt.setAutoCreateRowSorter(true);
        jTableEnt.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        jTableEnt.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Status", "Patient ID", "First Name", "Last Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableEnt.setRowHeight(25);
        jScrollEnt.setViewportView(jTableEnt);

        javax.swing.GroupLayout jPanelEntLayout = new javax.swing.GroupLayout(jPanelEnt);
        jPanelEnt.setLayout(jPanelEntLayout);
        jPanelEntLayout.setHorizontalGroup(
            jPanelEntLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollEnt, javax.swing.GroupLayout.DEFAULT_SIZE, 829, Short.MAX_VALUE)
        );
        jPanelEntLayout.setVerticalGroup(
            jPanelEntLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollEnt, javax.swing.GroupLayout.DEFAULT_SIZE, 403, Short.MAX_VALUE)
        );

        QTabbedPane.addTab("ENT", jPanelEnt);

        jTableIntMed.setAutoCreateRowSorter(true);
        jTableIntMed.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        jTableIntMed.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Status", "Patient ID", "First Name", "Last Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableIntMed.setRowHeight(25);
        jScrollIntMed.setViewportView(jTableIntMed);

        javax.swing.GroupLayout jPanelIntmedLayout = new javax.swing.GroupLayout(jPanelIntmed);
        jPanelIntmed.setLayout(jPanelIntmedLayout);
        jPanelIntmedLayout.setHorizontalGroup(
            jPanelIntmedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollIntMed, javax.swing.GroupLayout.DEFAULT_SIZE, 829, Short.MAX_VALUE)
        );
        jPanelIntmedLayout.setVerticalGroup(
            jPanelIntmedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollIntMed, javax.swing.GroupLayout.DEFAULT_SIZE, 403, Short.MAX_VALUE)
        );

        QTabbedPane.addTab("INTERNAL MEDICINE", jPanelIntmed);

        jTableSonoOB.setAutoCreateRowSorter(true);
        jTableSonoOB.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        jTableSonoOB.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Status", "Patient ID", "First Name", "Last Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableSonoOB.setRowHeight(25);
        jScrollSonoOB.setViewportView(jTableSonoOB);

        javax.swing.GroupLayout jPanelSonoOBLayout = new javax.swing.GroupLayout(jPanelSonoOB);
        jPanelSonoOB.setLayout(jPanelSonoOBLayout);
        jPanelSonoOBLayout.setHorizontalGroup(
            jPanelSonoOBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollSonoOB, javax.swing.GroupLayout.DEFAULT_SIZE, 829, Short.MAX_VALUE)
        );
        jPanelSonoOBLayout.setVerticalGroup(
            jPanelSonoOBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollSonoOB, javax.swing.GroupLayout.DEFAULT_SIZE, 403, Short.MAX_VALUE)
        );

        QTabbedPane.addTab("OB SONOLOGIST", jPanelSonoOB);

        jTableDerma.setAutoCreateRowSorter(true);
        jTableDerma.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        jTableDerma.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Status", "Patient ID", "First Name", "Last Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableDerma.setRowHeight(20);
        jScrollDerma.setViewportView(jTableDerma);

        javax.swing.GroupLayout jPanelDermaLayout = new javax.swing.GroupLayout(jPanelDerma);
        jPanelDerma.setLayout(jPanelDermaLayout);
        jPanelDermaLayout.setHorizontalGroup(
            jPanelDermaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollDerma, javax.swing.GroupLayout.DEFAULT_SIZE, 829, Short.MAX_VALUE)
        );
        jPanelDermaLayout.setVerticalGroup(
            jPanelDermaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollDerma, javax.swing.GroupLayout.DEFAULT_SIZE, 403, Short.MAX_VALUE)
        );

        QTabbedPane.addTab("DERMATOLOGIST", jPanelDerma);

        jTableUro.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        jTableUro.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Status", "Patient ID", "First Name", "Last Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableUro.setRowHeight(25);
        jScrollUro.setViewportView(jTableUro);

        javax.swing.GroupLayout jPanelUroLayout = new javax.swing.GroupLayout(jPanelUro);
        jPanelUro.setLayout(jPanelUroLayout);
        jPanelUroLayout.setHorizontalGroup(
            jPanelUroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollUro, javax.swing.GroupLayout.DEFAULT_SIZE, 829, Short.MAX_VALUE)
        );
        jPanelUroLayout.setVerticalGroup(
            jPanelUroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollUro, javax.swing.GroupLayout.DEFAULT_SIZE, 403, Short.MAX_VALUE)
        );

        QTabbedPane.addTab("UROLOGIST", jPanelUro);

        jTableSurgery.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        jTableSurgery.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Status", "Patient ID", "First Name", "Last Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableSurgery.setRowHeight(25);
        jScrollSurgery.setViewportView(jTableSurgery);

        javax.swing.GroupLayout jPanelSurgeryLayout = new javax.swing.GroupLayout(jPanelSurgery);
        jPanelSurgery.setLayout(jPanelSurgeryLayout);
        jPanelSurgeryLayout.setHorizontalGroup(
            jPanelSurgeryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollSurgery, javax.swing.GroupLayout.DEFAULT_SIZE, 829, Short.MAX_VALUE)
        );
        jPanelSurgeryLayout.setVerticalGroup(
            jPanelSurgeryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollSurgery, javax.swing.GroupLayout.DEFAULT_SIZE, 403, Short.MAX_VALUE)
        );

        QTabbedPane.addTab("SURGERY", jPanelSurgery);

        jTableRadSono.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        jTableRadSono.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Status", "Patient ID", "First Name", "Last Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableRadSono.setRowHeight(25);
        jScrollRadSono.setViewportView(jTableRadSono);

        javax.swing.GroupLayout jPanelRadSonoLayout = new javax.swing.GroupLayout(jPanelRadSono);
        jPanelRadSono.setLayout(jPanelRadSonoLayout);
        jPanelRadSonoLayout.setHorizontalGroup(
            jPanelRadSonoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollRadSono, javax.swing.GroupLayout.DEFAULT_SIZE, 829, Short.MAX_VALUE)
        );
        jPanelRadSonoLayout.setVerticalGroup(
            jPanelRadSonoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollRadSono, javax.swing.GroupLayout.DEFAULT_SIZE, 403, Short.MAX_VALUE)
        );

        QTabbedPane.addTab("RADIO SONOLOGIST", jPanelRadSono);

        jTableOthers.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        jTableOthers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Status", "Patient ID", "First Name", "Last Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableOthers.setRowHeight(25);
        jScrollOthers.setViewportView(jTableOthers);

        javax.swing.GroupLayout jPanelOthersLayout = new javax.swing.GroupLayout(jPanelOthers);
        jPanelOthers.setLayout(jPanelOthersLayout);
        jPanelOthersLayout.setHorizontalGroup(
            jPanelOthersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollOthers, javax.swing.GroupLayout.DEFAULT_SIZE, 829, Short.MAX_VALUE)
        );
        jPanelOthersLayout.setVerticalGroup(
            jPanelOthersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollOthers, javax.swing.GroupLayout.DEFAULT_SIZE, 403, Short.MAX_VALUE)
        );

        QTabbedPane.addTab("OTHERS", jPanelOthers);

        jLabel1.setFont(new java.awt.Font("Sitka Heading", 1, 48)); // NOI18N
        jLabel1.setText(" P A T I E N T   Q U E U E");

        jLabelDate.setFont(new java.awt.Font("Poppins", 0, 32)); // NOI18N
        jLabelDate.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabelDate.setText("Date");

        jLabelWeekDate.setFont(new java.awt.Font("Poppins", 0, 26)); // NOI18N
        jLabelWeekDate.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabelWeekDate.setText("   ");

        javax.swing.GroupLayout ReceptionPanelLayout = new javax.swing.GroupLayout(ReceptionPanel);
        ReceptionPanel.setLayout(ReceptionPanelLayout);
        ReceptionPanelLayout.setHorizontalGroup(
            ReceptionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ReceptionPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 540, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(187, 187, 187))
            .addGroup(ReceptionPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(KRLogo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(ReceptionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelDate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelWeekDate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31))
            .addGroup(ReceptionPanelLayout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(QTabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 836, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(48, Short.MAX_VALUE))
        );
        ReceptionPanelLayout.setVerticalGroup(
            ReceptionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ReceptionPanelLayout.createSequentialGroup()
                .addGroup(ReceptionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ReceptionPanelLayout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(KRLogo))
                    .addGroup(ReceptionPanelLayout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(jLabelDate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelWeekDate)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(QTabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 513, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 35, Short.MAX_VALUE))
        );

        SidePanel.setBackground(new java.awt.Color(1, 50, 67));

        AddQButton.setBackground(new java.awt.Color(194, 225, 228));
        AddQButton.setFont(new java.awt.Font("Proxima Nova Rg", 0, 32)); // NOI18N
        AddQButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/faves/icons8-add-50.png"))); // NOI18N
        AddQButton.setText("Add Queue");
        AddQButton.setActionCommand("Add Queue  ");
        AddQButton.setBorder(null);
        AddQButton.setIconTextGap(8);
        AddQButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddQButtonActionPerformed(evt);
            }
        });

        PatientsButton.setBackground(new java.awt.Color(194, 225, 228));
        PatientsButton.setFont(new java.awt.Font("Proxima Nova Rg", 0, 32)); // NOI18N
        PatientsButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/faves/icons8-user-menu-male-50.png"))); // NOI18N
        PatientsButton.setText("  Patients  ");
        PatientsButton.setActionCommand("Add Queue  ");
        PatientsButton.setBorder(null);
        PatientsButton.setIconTextGap(8);
        PatientsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PatientsButtonActionPerformed(evt);
            }
        });

        HistoryButton.setBackground(new java.awt.Color(194, 225, 228));
        HistoryButton.setFont(new java.awt.Font("Proxima Nova Rg", 0, 32)); // NOI18N
        HistoryButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/faves/icons8-checklist-50.png"))); // NOI18N
        HistoryButton.setText("   History  ");
        HistoryButton.setActionCommand("Add Queue  ");
        HistoryButton.setBorder(null);
        HistoryButton.setIconTextGap(8);
        HistoryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HistoryButtonActionPerformed(evt);
            }
        });

        ChangeUser.setBackground(new java.awt.Color(27, 163, 156));
        ChangeUser.setFont(new java.awt.Font("Proxima Nova Rg", 1, 24)); // NOI18N
        ChangeUser.setForeground(new java.awt.Color(255, 255, 255));
        ChangeUser.setText("CHANGE USER");
        ChangeUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChangeUserActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout SidePanelLayout = new javax.swing.GroupLayout(SidePanel);
        SidePanel.setLayout(SidePanelLayout);
        SidePanelLayout.setHorizontalGroup(
            SidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SidePanelLayout.createSequentialGroup()
                .addGroup(SidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(SidePanelLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(SidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(HistoryButton, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PatientsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(AddQButton, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(SidePanelLayout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(ChangeUser)))
                .addGap(30, 30, 30))
        );
        SidePanelLayout.setVerticalGroup(
            SidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SidePanelLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(AddQButton, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(PatientsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(HistoryButton, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 396, Short.MAX_VALUE)
                .addComponent(ChangeUser)
                .addGap(28, 28, 28))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(310, 310, 310)
                .addComponent(ReceptionPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(SidePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ReceptionPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(SidePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AddQButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddQButtonActionPerformed
        AddQueue aq = new AddQueue();
        aq.setVisible(true);
        aq.pack();
        aq.setLocationRelativeTo(null); 
        aq.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.dispose();
    }//GEN-LAST:event_AddQButtonActionPerformed

    private void PatientsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PatientsButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PatientsButtonActionPerformed

    private void HistoryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HistoryButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_HistoryButtonActionPerformed

    private void ChangeUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChangeUserActionPerformed
        flashscreen fs = new flashscreen();
        fs.setVisible(true);
        fs.pack();
        fs.setLocationRelativeTo(null);
        //rv.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.dispose();
    }//GEN-LAST:event_ChangeUserActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ReceptionView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new ReceptionView().setVisible(true);
        });
    }
    
    private void date()
    {
        Calendar cal = new GregorianCalendar();
        int d = cal.get(Calendar.DAY_OF_MONTH);
        int m = cal.get(Calendar.MONTH);
        int yr = cal.get(Calendar.YEAR);
        String month;
        switch(m){
            case 0:
                month = "January";
                break;
            case 1:
                month = "February";
                break;
            case 2:
                month = "March";
                break;
            case 3:
                month = "April";
                break;
            case 4:
                month = "May";
                break;
            case 5:
                month = "June";
                break;
            case 6:
                month = "July";
                break;
            case 7:
                month = "August";
                break;
            case 8:
                month = "September";
                break;
            case 9:
                month = "October";
                break;
            case 10:
                month = "November";
                break;
            default:
                month = "December";
                break;
        }
        jLabelDate.setText(month+" "+d+", "+yr);
    }
    
    private void day(){
        Calendar cal = new GregorianCalendar();
        int today = cal.get(Calendar.DAY_OF_WEEK);
        switch(today){
            case 1:
                jLabelWeekDate.setText("Sunday");
                break;
            case 2:
                jLabelWeekDate.setText("Monday");
                break;
            case 3:
                jLabelWeekDate.setText("Tuesday");
                break;
            case 4:
                jLabelWeekDate.setText("Wednesday");
                break;
            case 5:
                jLabelWeekDate.setText("Thursday");
                break;
            case 6:
                jLabelWeekDate.setText("Friday");
                break;
            case 7:
                jLabelWeekDate.setText("Saturday");
                break;
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddQButton;
    private javax.swing.JButton ChangeUser;
    private javax.swing.JButton HistoryButton;
    private javax.swing.JLabel KRLogo;
    private javax.swing.JButton PatientsButton;
    private javax.swing.JTabbedPane QTabbedPane;
    private javax.swing.JPanel ReceptionPanel;
    private javax.swing.JPanel SidePanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelDate;
    private javax.swing.JLabel jLabelWeekDate;
    private javax.swing.JPanel jPanelDerma;
    private javax.swing.JPanel jPanelEnt;
    private javax.swing.JPanel jPanelIntmed;
    private javax.swing.JPanel jPanelObgyne;
    private javax.swing.JPanel jPanelOptal;
    private javax.swing.JPanel jPanelOthers;
    private javax.swing.JPanel jPanelPedia;
    private javax.swing.JPanel jPanelRadSono;
    private javax.swing.JPanel jPanelSonoOB;
    private javax.swing.JPanel jPanelSurgery;
    private javax.swing.JPanel jPanelUro;
    private javax.swing.JScrollPane jScrollDerma;
    private javax.swing.JScrollPane jScrollEnt;
    private javax.swing.JScrollPane jScrollIntMed;
    private javax.swing.JScrollPane jScrollObgyne;
    private javax.swing.JScrollPane jScrollOptal;
    private javax.swing.JScrollPane jScrollOthers;
    private javax.swing.JScrollPane jScrollPedia;
    private javax.swing.JScrollPane jScrollRadSono;
    private javax.swing.JScrollPane jScrollSonoOB;
    private javax.swing.JScrollPane jScrollSurgery;
    private javax.swing.JScrollPane jScrollUro;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTableDerma;
    private javax.swing.JTable jTableEnt;
    private javax.swing.JTable jTableIntMed;
    private javax.swing.JTable jTableObgyne;
    private javax.swing.JTable jTableOptal;
    private javax.swing.JTable jTableOthers;
    private javax.swing.JTable jTablePedia;
    private javax.swing.JTable jTableRadSono;
    private javax.swing.JTable jTableSonoOB;
    private javax.swing.JTable jTableSurgery;
    private javax.swing.JTable jTableUro;
    // End of variables declaration//GEN-END:variables
}
